version: "3.8"
services:
  db:
    container_name: postgres
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    ports:
      - ${DB_PORT}:${DB_PORT}
    expose:
      - ${DB_PORT}
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - mynet
  backend-service:
    container_name: url-shortner-backend-service
    image: suraj362/url-shortner-backend-service:latest
    restart: unless-stopped
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - SERVER_PORT=${SERVER_PORT}
      - REDIS_HOST=redis
    ports:
      - "8080:8080"
    volumes:
      - backendapp:/app
    depends_on:
      - db
      - redis
    networks:
      - mynet
  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - mynet
  redirect-service:
    container_name: url-shortner-redirect-service
    image: suraj362/url-shortner-redirect-service:latest
    restart: unless-stopped
    volumes:
      - redirectapp:/app
    depends_on:
      - db
      - redis
      - backend-service
    networks:
      - mynet

networks:
  mynet:
    driver: bridge

volumes:
  db:
    driver: local
